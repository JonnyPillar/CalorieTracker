@model CalorieTracker.Models.ViewModels.NutrientModel
@{
    ViewBag.Title = "Details";
}
<div id="blue">
    <div class="centered">
        <h2>@Html.DisplayFor(model => model.Nutrient.Name)</h2>
        <p>Your History For This Nutrient</p>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-xs-12 centered">
            <canvas class="" id="@Model.ChartName" width="500px" height="300px"></canvas>
        </div>
        <script type="text/javascript">
            $(document).ready(function () {
                var ctx = document.getElementById("@Model.ChartName").getContext("2d");
                var data = {
                    @Html.Raw(Model.NutrientRDAChartUtil.GetDataString())
                };

                var options = {
                    scaleStartValue: 0
                };
                @if (Model.NutrientRDAChartUtil.MaxChartValue == Model.NutrientRDAChartUtil.MinChartValue) {
                    
                    @:options = {
                    @:scaleOverride: true,
                    @:scaleSteps: 3,
                    @:scaleStepWidth: 1,
                    @:scaleStartValue: @Model.NutrientRDAChartUtil.MinChartValue - 2,
                    @:scaleEndValue: @Model.NutrientRDAChartUtil.MaxChartValue +2
                    @:}
                }
                var myNewChart = new Chart(ctx).Line(data, options);
            });
        </script>
    </div>
    <div class="row centered">
        <div class="loginPanel">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Nutrient.SourceID)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Nutrient.SourceID)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Nutrient.UnitType)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Nutrient.UnitType)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Nutrient.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Nutrient.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Nutrient.DecimalRounding)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Nutrient.DecimalRounding)
                </dd>

            </dl>
        </div>
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.Nutrient.NutrientID }) |
            @Html.ActionLink("Back to List", "Index")
        </p>
    </div>
</div>